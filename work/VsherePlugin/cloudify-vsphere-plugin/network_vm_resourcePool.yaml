tosca_definitions_version: cloudify_dsl_1_3

imports:
  - types.yaml
  - plugin.yaml
  #zhutao
  - 'plugin:pa-plugin?version=1.0&distribution=centos'

inputs:

#  CLIENT CONFIGURATION

#
#  port:
#    type: string
#    default: 443
#
#  datacenter_name:
#    type: string
#    default: Datacenter1
#
#  resource_pool_name:
#    type: string
#    default: d
#
#  auto_placement:
#    type: string
#    default: true
##
#  allow_insecure:
#    type: string
#    default: true

  # SERVER CONFIGURATION
#  old_vm:
#    type: boolean
#    default: false

  datacenter_name:
    type: string
    default: Datacenter1
  # NIC CONFIGURATION
  switch_distributed:
    type: boolean
    default: false

  server_name:
    type: string
    default: test-pa

  template_name:
    type: string
    default: tem

  panabit_name:
    type: string
    default: pa

  cloud_ip:
    type: string
    default: 192.168.4.71
  panabit_ip:
    type: string
    default: 192.168.4.81

  vcenter_ip:
    type: string
    default: 192.168.4.89

  vcenter_username:
    type: string
    default: administrator@zjs.local

  vcenter_password:
    type: string
    default: Zijinshan001&

  # NETWORK CONFIGURATION
#  network_name:
#    type: string
#    default: example_network

#  vlan_id:
#    type: string
#    default: 0

#  vswitch_name:
#    type: string
#    default: vSwitch0

#  nicdevice:
#    type: string
#    default: vmnic1

#dsl_definitions:
#
#  connection_config: &connection_config
#    username: { get_input: username }
#    password: { get_input: password }
#    host: { get_input: host }
#    port: { get_input: port }
#    datacenter_name: { get_input: datacenter_name }
#    resource_pool_name: { get_input: resource_pool_name }
#    auto_placement: { get_input: auto_placement }
#    allow_insecure: { get_input: allow_insecure }

dsl_definitions:
  connection_config: &connection_config
    auto_placement: true
    allow_insecure: true
    datacenter_name: { get_input: datacenter_name }
    host: { get_input: vcenter_ip }
    username: { get_input: vcenter_username }
    password: { get_input: vcenter_password }

node_templates:

  nic:
    type: cloudify.vsphere.nodes.NIC
    properties:
      connection_config: *connection_config
      switch_distributed: false
      adapter_type: E1000
      name: { get_property: [ man, network, name ] }
      network_configuration:
        management: true
        external: true
        use_dhcp: false
        network: 172.16.168.0/24
        gateway: 172.16.168.1
        ip: 172.16.168.201
    relationships:
      - type: cloudify.relationships.vsphere.nic_connected_to_network
        target: man

  nic3:
    type: cloudify.vsphere.nodes.NIC
    properties:
      connection_config: *connection_config
      name: { get_property: [ wan, network, name ] }
      switch_distributed: false
      adapter_type: E1000
      network_configuration:
        use_dhcp: true
    relationships:
      - type: cloudify.relationships.vsphere.nic_connected_to_network
        target: wan

  nic4:
    type: cloudify.vsphere.nodes.NIC
    properties:
      connection_config: *connection_config
      name: { get_property: [ lan, network, name ] }
      switch_distributed: false
      adapter_type: E1000
    relationships:
      - type: cloudify.relationships.vsphere.nic_connected_to_network
        target: lan

  man:
    type: cloudify.vsphere.nodes.Network
    properties:
      connection_config: *connection_config
#      use_existing_resource: True
      network:
        name: z-man
        vlan_id: 0
        vswitch_name: vSwitch-man
        nicdevice: vmnic1
        switch_distributed: { get_input: switch_distributed }

  wan:
    type: cloudify.vsphere.nodes.Network
    properties:
      connection_config: *connection_config
      network:
        name: z-wan
        vlan_id: 0
        vswitch_name: vSwitch-wan
        nicdevice: vmnic2
        switch_distributed: { get_input: switch_distributed }

  lan:
    type: cloudify.vsphere.nodes.Network
    properties:
      connection_config: *connection_config
      network:
        name: z-lan
        vlan_id: 0
        vswitch_name: vSwitch-lan
        nicdevice: vmnic3
        switch_distributed: { get_input: switch_distributed }

  vR:
    type: cloudify.vsphere.nodes.Server
    properties:
      use_external_resource: false
      connection_config: *connection_config
      agent_config:
        install_method: none
      server:
        name: { get_input: server_name }
        template: { get_input: template_name }
        cpus: 1
        memory: 1024
      networking:
        connect_networks:
          - name: { get_property: [ man, network, name ] }
            management: true
          - name: { get_property: [ wan, network, name ] }
            management: false
          - name: { get_property: [ lan, network, name ] }
            management: false
#      custom_attributes:
#        username: { get_input: username }
    relationships:
      - type: cloudify.relationships.connected_to
        target: man
      - type: cloudify.relationships.connected_to
        target: wan
      - type: cloudify.relationships.connected_to
        target: lan

  vR_conf:
    type: cloudify.pa.init_manager
    capabilities:
      scalable:
        properties:
          default_instances: 1
    properties:
#      ip: 192.168.4.81
      pa_name: { get_input: panabit_name}
      cloud_ip: { get_input: cloud_ip}
      ip: { get_input: panabit_ip}
      lan: 192.168.10.1
      interface: em0
      netmask: 255.255.255.0
      gateway: 192.168.4.1
      connection_config:
        host: 192.168.4.85
        login_name: admin
        login_password: panabit
      new_login_password: panabit
      inside_nic_number: 1
      outside_nic_number: 1
    relationships:
      - target: vR
        type: cloudify.relationships.contained_in

